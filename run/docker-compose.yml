version: '3.5'

services:

  gateway:
    image: traefik:1.7
    container_name: gateway
    restart: always
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${ROOT_DIR}/etc/gateway:/etc/traefik
    environment:
      - "TZ=Europe/Berlin"
      - "TRAEFIK_PROVIDERS_FILE_FILENAME=/etc/traefik/custom.toml"
      - "GODADDY_API_KEY=${DYN_DNS_PROVIDER_USERNAME}"
      - "GODADDY_API_SECRET=${DYN_DNS_PROVIDER_PASSWORD}"
    networks:
      - ${INTERNAL_NETWORK:-internal}
      - www


  core:
    container_name: core
    image: ${REPO}/radshift-core
    restart: always
    ports:
      - 3000:3000
    privileged: true
    volumes:
      - "${ROOT_DIR}/etc/core:/usr/src/conf"
      - "${ROOT_DIR}/var/core:/var/core"
      - "${ROOT_DIR}/var/shared:/var/shared"
      - "${ROOT_DIR}/home:/home"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "/home/pirate:/backup"
    environment:
      - "PORT=3000"
      - "CONF_DIR=/usr/src/conf"
      - "ACTIVE_CONTEXT_PROFILES=${ACTIVE_CONTEXT_PROFILES}"
      - "HOST_DOMAIN=${DOMAIN}"
      - "DYN_DNS_PROVIDER=${DYN_DNS_PROVIDER}"
      - "DYN_DNS_PROVIDER_USERNAME=${DYN_DNS_PROVIDER_USERNAME}"
      - "DYN_DNS_PROVIDER_PASSWORD=${DYN_DNS_PROVIDER_PASSWORD}"
      - "DYN_DNS_UPDATE_INTERVAL_MINUTES=${DYN_DNS_UPDATE_INTERVAL_MINUTES}"
      - "LOG_LEVEL=${LOG_LEVEL}"
      - "SELFMONITOR_LOG_DIR=/var/core/selfmonitorlog"
    networks:
      - www
      - ${INTERNAL_NETWORK:-internal}
    labels:
      - "traefik.backend=core"
      - "traefik.docker.network=${INTERNAL_NETWORK:-internal}"
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host:core.${DOMAIN}"
      - "traefik.frontend.entryPoints=http,https"
      - "traefik.port=3000"

  
  portainer:
    image: portainer/portainer
    container_name: portainer
    restart: always
    # environment:
    #   - VIRTUAL_HOST=dev.portainer
    ports:
      - 9000:9000
      - 8000:8000
    networks:
      - internal
      - www
      - dev
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock


  streamnomorefam:
    container_name: streamnomorefam
    image: ${REPO}/radshift-stream-downloader
    restart: always
    user: ${WWW_DATA_USER_ID:-33}
    environment:
      - PORT=3009
    volumes:
      - "${ROOT_DIR}/var/nextcloud/data:/usr/src/app/output"
    ports:
      - 3009:3009
    networks:
      - www
      - ${INTERNAL_NETWORK:-internal}
    labels:
      - "traefik.backend=streamnomorefam"
      - "traefik.docker.network=${INTERNAL_NETWORK:-internal}"
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host:streamnomorefam.${DOMAIN}"
      - "traefik.frontend.entryPoints=http,https"
      - "traefik.frontend.auth.forward.address=http://core:3000/api/auth/authenticate"
      - "traefik.frontend.auth.forward.authResponseHeaders=X-User"
      - "traefik.frontend.auth.forward.trustForwardHeader=true"
      - "traefik.port=3009"
      

  nextcloud:
    container_name: nextcloud
    image: nextcloud:17
    restart: always
    depends_on:
      - nextcloud-db
    environment:
      - POSTGRES_USER=${NEXTCLOUD_POSTGRES_DB_USER}
      - POSTGRES_PASSWORD=${NEXTCLOUD_POSTGRES_DB_PASSWORD}
      - POSTGRES_DB=nextcloud
      - POSTGRES_HOST=nextcloud-db
    volumes:
      - "${ROOT_DIR}/var/nextcloud:/var/www/html"
    networks:
      - ${INTERNAL_NETWORK:-internal}
      - www
    labels:
      - "traefik.backend=nextcloud"
      - "traefik.docker.network=${INTERNAL_NETWORK:-internal}"
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host:nextcloud.${DOMAIN}"
      - "traefik.frontend.entryPoints=http,https"
      - "traefik.port=80"
  

  nextcloud-db:
    container_name: nextcloud-db
    image: postgres:12-alpine
    restart: always
    environment:
      - POSTGRES_USER=${NEXTCLOUD_POSTGRES_DB_USER}
      - POSTGRES_PASSWORD=${NEXTCLOUD_POSTGRES_DB_PASSWORD}
      - XXX_POSTGRES_PASSWORD_FILE=/run/secrets/postgres-passwd
      - POSTGRES_DB=nextcloud
    volumes:
      - "${ROOT_DIR}/var/nextcloud-db:/var/lib/postgresql/data"
    networks:
      - ${INTERNAL_NETWORK:-internal}

      
  bitwarden:
    container_name: bitwarden
    image: bitwardenrs/server
    restart: always
    volumes:
      - "${ROOT_DIR}/var/bitwarden:/data"
    networks:
      - ${INTERNAL_NETWORK:-internal}
    labels:
      - "traefik.backend=bitwarden"
      - "traefik.docker.network=${INTERNAL_NETWORK:-internal}"
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host:bitwarden.${DOMAIN}"
      - "traefik.frontend.entryPoints=http,https"
      - "traefik.port=80"

  
  samba:
    ## Connect: smb://black-pearl/${SAMBA_USER}
    container_name: samba
    image: dperson/samba
    restart: always
    volumes:
      - "${ROOT_DIR}/var/nextcloud/data/${SAMBA_USER1}/files:/${SAMBA_USER1}"
    networks:
      - ${INTERNAL_NETWORK:-internal}
      - www
    # One-line (!) command required if multiple shares required; see https://github.com/dperson/samba/wiki/Using-Docker-Compose
    command: '-u "${SAMBA_USER1};${SAMBA_PASSWORD1}" -s "${SAMBA_USER1};/${SAMBA_USER1};yes;no;no;${SAMBA_USER1};;;"'
    ports:
      - 445:445
      - 139:139
    environment:
      - USERID=${WWW_DATA_USER_ID:-33}
      - GROUPID=${WWW_DATA_GROUP_ID:-33}
      - PERMISSIONS=true
      - TZ='Europe/Berlin'
      - SMB=true
  
  
  samba-2:
    ## Connect: smb://black-pearl/${SAMBA_USER}
    container_name: samba-2
    image: dperson/samba
    restart: always
    volumes:
      - "${ROOT_DIR}/var/nextcloud/data/${SAMBA_USER2}/files:/${SAMBA_USER2}"
    networks:
      - ${INTERNAL_NETWORK:-internal}
      - www
    # One-line (!) command required if multiple shares required; see https://github.com/dperson/samba/wiki/Using-Docker-Compose
    command: '-u "${SAMBA_USER2};${SAMBA_PASSWORD2}" -s "${SAMBA_USER2};/${SAMBA_USER2};yes;no;no;${SAMBA_USER2};;;"'
    ports:
      - 446:445
      - 140:139
    environment:
      - USERID=${WWW_DATA_USER_ID:-33}
      - GROUPID=${WWW_DATA_GROUP_ID:-33}
      - PERMISSIONS=true
      - TZ='Europe/Berlin'
      - SMB=true
  

  airsonic:
    container_name: airsonic
    image: linuxserver/airsonic
    restart: always
    volumes:
      - "${ROOT_DIR}/var/nextcloud/data/birdman/files:/music"
      - "${ROOT_DIR}/var/airsonic/config:/config"
      - "${ROOT_DIR}/var/airsonic/playlists:/playlists"
    networks:
      - ${INTERNAL_NETWORK:-internal}
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Berlin
    ports:
    - 4040:4040
    labels:
      - "traefik.backend=airsonic"
      - "traefik.docker.network=${INTERNAL_NETWORK:-internal}"
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host:airsonic.${DOMAIN}"
      - "traefik.frontend.entryPoints=http,https"
      - "traefik.port=4040"


  shnippit:
    container_name: shnippit
    image: ${REPO}/shnippit
    restart: always
    volumes:
      - "${ROOT_DIR}/var/shnippit/data:/data"
    environment:
      - ATTACHMENTS_STORAGE_PATH=/data/attachments
    networks:
      - ${INTERNAL_NETWORK:-internal}
    ports:
    - 8080:8080
    labels:
      - "traefik.backend=shnippit"
      - "traefik.docker.network=${INTERNAL_NETWORK:-internal}"
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host:shnippit.${DOMAIN}"
      - "traefik.frontend.entryPoints=http,https"
      - "traefik.port=8080"



networks:

  www:
    name: www
    driver: bridge

  internal:
    name: internal
    driver: bridge
    internal: true

  dev:
    name: dev
    driver: bridge
