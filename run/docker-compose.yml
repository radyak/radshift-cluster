version: '3.5'

services:

  gateway:
    image: traefik:1.7
    container_name: gateway
    restart: always
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${ROOT_DIR}/etc/gateway:/etc/traefik
    environment:
      - "TZ=Europe/Berlin"
      - "TRAEFIK_PROVIDERS_FILE_FILENAME=/etc/traefik/custom.toml"
      - "GODADDY_API_KEY=${DYN_DNS_PROVIDER_USERNAME}"
      - "GODADDY_API_SECRET=${DYN_DNS_PROVIDER_PASSWORD}"
    networks:
      - ${INTERNAL_NETWORK:-internal}
      - www

  core:
    container_name: core
    image: ${REPO}/radshift-core:${TAG}
    restart: on-failure
    ports:
      - 3000:3000
    volumes:
      - "${ROOT_DIR}/etc/core:/usr/src/conf"
      - "${ROOT_DIR}/var/core:/var/core"
      - "${ROOT_DIR}/var/shared:/var/shared"
      - "${ROOT_DIR}/home:/home"
      - "/var/run/docker.sock:/var/run/docker.sock"
    environment:
      - "PORT=3000"
      - "CONF_DIR=/usr/src/conf"
      - "ACTIVE_CONTEXT_PROFILES=${ACTIVE_CONTEXT_PROFILES}"
      - "HOST_DOMAIN=${DOMAIN}"
      - "DYN_DNS_PROVIDER=${DYN_DNS_PROVIDER}"
      - "DYN_DNS_PROVIDER_USERNAME=${DYN_DNS_PROVIDER_USERNAME}"
      - "DYN_DNS_PROVIDER_PASSWORD=${DYN_DNS_PROVIDER_PASSWORD}"
      - "DYN_DNS_UPDATE_INTERVAL_MINUTES=${DYN_DNS_UPDATE_INTERVAL_MINUTES}"
      - "LOG_LEVEL=${LOG_LEVEL}"
    networks:
      - www
      - ${INTERNAL_NETWORK:-internal}
    labels:
      - "traefik.backend=core"
      - "traefik.docker.network=${INTERNAL_NETWORK:-internal}"
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host:core.${DOMAIN}"
      - "traefik.frontend.entryPoints=http,https"
      - "traefik.port=3000"

  # testapp:
  #   container_name: testapp
  #   image: ${REPO}/radshift-testapp:${TAG}
  #   restart: on-failure
  #   environment:
  #     - PORT=3210
  #   ports:
  #     - 3210:3210
  #   networks:
  #     - ${INTERNAL_NETWORK:-internal}
  #   labels:
  #     - "traefik.backend=testapp"
  #     - "traefik.docker.network=${INTERNAL_NETWORK:-internal}"
  #     - "traefik.enable=true"
  #     - "traefik.frontend.rule=Host:testapp.${DOMAIN}"
  #     - "traefik.frontend.entryPoints=http,https"
  #     - "traefik.frontend.auth.forward.address=http://core:3000/api/auth/authenticate"
  #     - "traefik.frontend.auth.forward.authResponseHeaders=X-User,X-Roles"
  #     - "traefik.frontend.auth.forward.trustForwardHeader=true"
  #     - "traefik.port=3210"
    
  streamnomorefam:
    container_name: streamnomorefam
    image: ${REPO}/radshift-stream-downloader:${TAG}
    restart: on-failure
    environment:
      - PORT=3009
    volumes:
      - "${ROOT_DIR}/home/shared/downloads:/usr/src/app/output"
    ports:
      - 3009:3009
    networks:
      - www
      - ${INTERNAL_NETWORK:-internal}
    labels:
      - "traefik.backend=streamnomorefam"
      - "traefik.docker.network=${INTERNAL_NETWORK:-internal}"
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host:streamnomorefam.${DOMAIN}"
      - "traefik.frontend.entryPoints=http,https"
      - "traefik.frontend.auth.forward.address=http://core:3000/api/auth/authenticate"
      - "traefik.frontend.auth.forward.authResponseHeaders=X-User"
      - "traefik.frontend.auth.forward.trustForwardHeader=true"
      - "traefik.port=3009"
      
  nextcloud:
    container_name: nextcloud
    image: nextcloud:17
    restart: on-failure
    depends_on:
      - nextcloud-db
    environment:
      - POSTGRES_USER=${NEXTCLOUD_POSTGRES_DB_USER}
      - POSTGRES_PASSWORD=${NEXTCLOUD_POSTGRES_DB_PASSWORD}
      - POSTGRES_DB=nextcloud
      - POSTGRES_HOST=nextcloud-db
    volumes:
      - "${ROOT_DIR}/var/nextcloud:/var/www/html"
    networks:
      - ${INTERNAL_NETWORK:-internal}
      - www
    labels:
      - "traefik.backend=nextcloud"
      - "traefik.docker.network=${INTERNAL_NETWORK:-internal}"
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host:nextcloud.${DOMAIN}"
      - "traefik.frontend.entryPoints=http,https"
      - "traefik.port=80"
  
  nextcloud-db:
    container_name: nextcloud-db
    image: postgres:12-alpine
    restart: on-failure
    environment:
      - POSTGRES_USER=${NEXTCLOUD_POSTGRES_DB_USER}
      - POSTGRES_PASSWORD=${NEXTCLOUD_POSTGRES_DB_PASSWORD}
      - XXX_POSTGRES_PASSWORD_FILE=/run/secrets/postgres-passwd
      - POSTGRES_DB=nextcloud
    volumes:
      - "${ROOT_DIR}/var/nextcloud-db:/var/lib/postgresql/data"
    networks:
      - ${INTERNAL_NETWORK:-internal}


networks:

  www:
    name: www
    driver: bridge

  internal:
    name: internal
    driver: bridge
    internal: true

  dev:
    name: dev
    driver: bridge
